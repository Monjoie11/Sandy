package com.learning.sandwich.sandy.model;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.PrimaryKey;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;

/**
 * This class contains the attributes that comprise a sandwich object and a relevant setters and
 * getters. It can be enjoyed in a bowl with milk (serializable...) and/or contains a UUID
 * sufficient for transporting an object in and out of an ORM.
 */
@Entity
public class Sandwich implements Serializable {

  private static final long serialVersionUID = 1L;


  @PrimaryKey(autoGenerate = true)
  @ColumnInfo(name = "sandwich_id")
  @SerializedName("id")
  private long sandwichId;

  @ColumnInfo(name = "sandwich_style")
  @SerializedName("style")
  @Nullable
  private int sandwichStyle;

  @ColumnInfo(name = "machine_eat")
  @SerializedName("machineEat")
  private boolean machineEat;

  @ColumnInfo(name = "human_eat")
  @SerializedName("humanEat")
  private boolean humanEat;

  @NonNull
  @ColumnInfo(name = "file_name")
  @SerializedName("file")
  private String fileName;

  @SerializedName("isResource")
  @ColumnInfo(name = "image_resource")
  private boolean imageResource;

  /**
   * @return this method returns the boolean designating whether or not a sandwich's image is a
   * resource file
   */
  public boolean isImageResource() {
    return imageResource;
  }

  /**
   * @param imageResource this method sets the boolean designating whether or not a sandwich's image
   * is a resource file
   */
  public void setImageResource(boolean imageResource) {
    this.imageResource = imageResource;
  }

  /**
   * @return this method gets the sandwichId autogenerated by Room
   */
  public long getSandwichId() {
    return sandwichId;
  }

  /**
   * @param sandwichId this method shuld never be used as id is autogenertaed, but code wn't compile
   * without a setter
   */
  public void setSandwichId(long sandwichId) {
    this.sandwichId = sandwichId;
  }

  /**
   * @return This method gets the sandwich style (0-9)
   */
  public int getSandwichStyle() {
    return sandwichStyle;
  }

  /**
   * @param sandwichStyle This method sets the sandwich style (0-9)
   */
  public void setSandwichStyle(int sandwichStyle) {
    this.sandwichStyle = sandwichStyle;
  }

  /**
   * @return this method gets the boolean designating whether or not sandy thinks the image is a
   * sandwich
   */
  public boolean isMachineEat() {
    return machineEat;
  }

  /**
   * @param machineEat this method sets the boolean designating whether or not sandy thinks the
   * image is a sandwich
   */
  public void setMachineEat(boolean machineEat) {
    this.machineEat = machineEat;
  }

  /**
   * @return this method gets the boolean designating whether or not the user thinks the image is a
   * sandwich
   */
  public boolean isHumanEat() {
    return humanEat;
  }

  /**
   * @param humanEat this method sets the boolean designating whether or not the user thinks the
   * image is a sandwich
   */
  public void setHumanEat(boolean humanEat) {
    this.humanEat = humanEat;
  }

  /**
   * @return this method gets the file name, URL or file path, associated with each sandwich
   */
  public String getFileName() {
    return fileName;
  }

  /**
   * @param fileName this method sets the boolean designating whether or not the user thinks the
   * image is a sandwich
   */
  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


}
